apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "fastapi-data-collector.fullname" . }}
  labels:
    {{- include "fastapi-data-collector.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "fastapi-data-collector.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "fastapi-data-collector.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "fastapi-data-collector.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: init-elasticsearch-wait
          image: "{{ .Values.initContainer.repository}}:{{ .Values.initContainer.tag }}"
          imagePullPolicy: {{ .Values.initContainer.pullPolicy }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          env:
            - name: ES_USERNAME
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.elasticsearch.clusterName }}-{{ .Values.elasticsearch.nodeGroup }}-credentials"
                  key: username
            - name: ES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.elasticsearch.clusterName }}-{{ .Values.elasticsearch.nodeGroup }}-credentials"
                  key: password
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: ES_SERVICE
              value: "{{ .Values.elasticsearch.clusterName }}-{{ .Values.elasticsearch.nodeGroup }}.$(POD_NAMESPACE)"
            - name: ES_PORT
              value: "9200"
            - name: ELASTICSEARCH_HOSTS
              value: "{{ .Values.elasticsearch.protocol }}://$(ES_USERNAME):$(ES_PASSWORD)@$(ES_SERVICE):$(ES_PORT)"
          command: ['sh', '-c', 'seconds=1; until curl -k "$(ELASTICSEARCH_HOSTS)/_cluster/health?wait_for_status=yellow&timeout=30s"; do >&2 echo "Elastisearch is unavailable - waiting for it... ($seconds)"; sleep 1; seconds=$(expr $seconds + 1); done']
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: ES_USERNAME
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.elasticsearch.clusterName }}-{{ .Values.elasticsearch.nodeGroup }}-credentials"
                  key: username
            - name: ES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.elasticsearch.clusterName }}-{{ .Values.elasticsearch.nodeGroup }}-credentials"
                  key: password
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: ES_SERVICE
              value: "{{ .Values.elasticsearch.clusterName }}-{{ .Values.elasticsearch.nodeGroup }}.$(POD_NAMESPACE)"
            - name: ES_PORT
              value: "{{ .Values.elasticsearch.httpPort }}"
            - name: ELASTICSEARCH_HOSTS
              value: "{{ .Values.elasticsearch.protocol }}://$(ES_USERNAME):$(ES_PASSWORD)@$(ES_SERVICE):$(ES_PORT)"
            - name: ELASTICSEARCH_VERIFY_SSL
              value: {{ .Values.fastapiElasticsearch.verifyElasticsearchSSL | ternary "true" "false" | quote  }}
            - name: ENABLE_DEBUG
              value: {{ .Values.fastapiApp.enableDebug | ternary "true" "false" | quote }}
          ports:
            - name: {{ .Values.service.name | quote}}
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
